openapi: '3.0.0'
info:
  version: '1.0.0'
  title: Automower® Connect API
  license:
    name: MIT
  description:
    This API allows you to control and obtain information about Automower®.
  contact:
    name: Husqvarna Smart Home
    url: https://www.husqvarna.com/uk/lawn-garden/smart-home-integration/
servers:
     - url: https://api.amc.husqvarna.dev/v1
       description: Live Server
security:
  - APIKeyHeader: []
    Token: []
    Provider: []

tags:
  - name: 'Mower'
    description: >-
      REST API that can supply information and status about mowers paired to a user.
  - name: 'Actions'
    description: >-
      REST API that enables a user to control a paired mower.
paths:
  /mowers:
    get:
      tags:
        - 'Mower'
      summary: List data for all mowers linked to a user.
      description: >-
        List data for all mowers linked to the user associated with the
        access token.
      responses:
        '200':
          $ref: '#/components/responses/MultipleMowers'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /mowers/{id}:
    get:
      tags:
        - 'Mower'
      summary: Get data for a mower linked to a user.
      description: Get data for a mower linked to the user associated with the access token.
      parameters:
        - $ref: '#/components/parameters/MowerID'
      responses:
        '200':
          $ref: '#/components/responses/SingleMower'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /mowers/{id}/actions:
    post:
      tags:
        - 'Actions'
      summary: Accepts actions to control mowers
      description: Accepts actions to control mowers
      parameters:
        - $ref: '#/components/parameters/MowerID'
      requestBody:
        $ref: '#/components/requestBodies/Action'
      responses:
        '202':
          $ref: '#/components/responses/ActionAccepted'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

components:
  parameters:
    MowerID:
      name: id
      in: path
      description: Identity of the mower.
      required: true
      schema:
        type: string

  schemas:
    JsonApiDataDocument:
      type: object
      description: A data document compliant with the JSON API Specification.
      properties:
        data:
          $ref: '#/components/schemas/JsonApiData'

    JsonApiDataListDocument:
      type: object
      description: A data list document compliant with the JSON API Specification.
      properties:
        data:
          type: array
          description: An array of primary data objects.
          items:
            $ref: '#/components/schemas/JsonApiData'

    JsonApiData:
      type: object
      description: A primary data object compliant with the JSON API Specification.
      properties:
        type:
          type: string
          description: The type of the data object.
          example: mower
        id:
          type: string
          description: The identity of the data object
          example: 256b2365-33a7-46fe-a9fb-e67e84f4ac01
        attributes:
          $ref: '#/components/schemas/MowerData'

    JsonApiErrorDocument:
      type: object
      description: An error document compliant with the JSON API Specification.
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/JsonApiError'

    JsonApiError:
      type: object
      description: A primary error object compliant with the JSON API Specification.
      properties:
        id:
          type: string
          description: A unique identifier for this particular occurrence of the problem.
          example: f41d9bbd-abc3-4c4b-b68c-b0079bb10820
        status:
          type: string
          description: >-
            The HTTP status code applicable to this problem, expressed as a string
            value.
          example: nnn
        code:
          type: string
          description: 'An application specific error code, expressed as a string value.'
          example: some.error.code
        title:
          type: string
          description: >-
            A short, human readable summary of the problem that should not change
            from occurrence to occurrence of the problem, except for purposes of
            localization.
          example: Some summary of the problem
        detail:
          type: string
          description: >-
            A human readable explanation specific to this occurrence of the
            problem. Like title, this value can be localized.
          example: Some details about the specific problem.

    MowerData:
      type: object
      description: A mower data object.
      properties:
        system:
          $ref: '#/components/schemas/System'
        battery:
          $ref: '#/components/schemas/Battery'
        mower:
          $ref: '#/components/schemas/MowerApp'
        calendar:
          $ref: '#/components/schemas/Calendar'
        planner:
          $ref: '#/components/schemas/Planner'
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
        - system
        - battery
        - mower
        - planner
        - metadata

    System:
      type: object
      description: System information about a mower
      properties:
        name:
          type: string
          description: The name given to the mower by the user
          example: My Mower
        model:
          type: string
          description: The model of the mower
          example: 450x
        serialNumber:
          type: string
          description: The serial number for the mower
          example: 701009001
      required:
        - name
        - model
        - serialNumber

    Battery:
      type: object
      description: Information about the battery in the mower
      properties:
        batteryPercent:
          type: integer
          minimum: 0
          maximum: 100
          description: The current battery level percentage
          example: 77
      required:
        - batteryPercent

    MowerApp:
      type: object
      description: Information about the mowers current status
      properties:
        mode:
          type: string
          enum:
            - MAIN_AREA
            - SECONDARY_AREA
            - HOME
            - DEMO
            - UNKNOWN
          example: MAIN_AREA
        activity:
          type: string
          enum:
            - UNKNOWN
            - NOT_APPLICABLE
            - MOWING
            - GOING_HOME
            - CHARGING
            - LEAVING
            - PARKED_IN_CS
            - STOPPED_IN_GARDEN
          example: MOWING
        state:
          type: string
          enum:
            - 'UNKNOWN'
            - 'NOT_APPLICABLE'
            - 'PAUSED'
            - 'IN_OPERATION'
            - 'WAIT_UPDATING'
            - 'WAIT_POWER_UP'
            - 'RESTRICTED'
            - 'OFF'
            - 'STOPPED'
            - 'ERROR'
            - 'FATAL_ERROR'
            - 'ERROR_AT_POWER_UP'
          example: IN_OPERATION
        errorCode:
          type: integer
          minimum: 0
          example: 0
        errorCodeTimestamp:
          type: integer
          format: int64
          minimum: 0
          example: 0
          description: >-
            Timestamp for the last error code in milliseconds since 1970-01-01T00:00:00 in local time.
            NOTE! This timestamp is in local time for the mower and is coming directly from the mower.
      required:
        - mode
        - activity
        - state
        
    Calendar:
      type: object
      description: Information about the planner
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/CalendarTask'

    Planner:
      type: object
      description: Information about the planner
      properties:
        nextStartTimestamp:
          type: integer
          format: int64
          example: 0
          description: >-
            Timestamp for the next auto start in milliseconds since 1970-01-01T00:00:00 in local time. 
            If the mower is charging then the value is the estimated time when it will be leaving the charging station. 
            If the value is 0 then the mower should start now. 
            NOTE! This timestamp is in local time for the mower and is coming directly from the mower.
        override:
          type: object
          description: TODO
          properties:
            action:
              type: string
              enum:
                - NOT_ACTIVE
                - FORCE_PARK
                - FORCE_MOW
              example: FORCE_MOW
          required:
            - action
        restrictedReason:
          type: string
          enum:
            - NONE
            - WEEK_SCHEDULE
            - PARK_OVERRIDE
            - SENSOR
            - DAILY_LIMIT
          example: PARK_OVERRIDE
      required:
        - schedules
        - nextStartTimestamp
        - restrictedReason

    CalendarTask:
      type: object
      properties:
        start:
          type: integer
          minimum: 0
          maximum: 1439
          example: 420
          description: Start time expressed in minutes after midnight.
        duration:
          type: integer
          minimum: 1
          maximum: 1440
          example: 780
          description: Duration time expressed in minutes.
        monday:
          type: boolean
          example: true
          description: Enabled on Mondays
        tuesday:
          type: boolean
          description: Enabled on Tuesdays
        wednesday:
          type: boolean
          example: true
          description: Enabled on Wednesdays
        thursday:
          type: boolean
          example: true
          description: Enabled on Thursdays
        friday:
          type: boolean
          example: true
          description: Enabled on Fridays
        saturday:
          type: boolean
          example: false
          description: Enabled on Saturdays
        sunday:
          type: boolean
          example: false
          description: Enabled on Sundays
      required:
        - start
        - duration
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday

    Metadata:
      type: object
      description: Information about the planner
      properties:
        connected:
          type: boolean
          example: true
          description: Is the mower currently connected
        statusTimestamp:
          type: integer
          format: int64
          example: 0
      required:
        - connected
        - statusTimestamp

    JsonApiAction:
      type: object
      properties:
        type:
          type: string
      required:
        - type

    Start:
      allOf:
      - $ref: '#/components/schemas/JsonApiAction'
      - type: object
        properties:
          attributes:
            $ref: '#/components/schemas/DurationAttributes'
        required:
          - attributes
            
    ResumeSchedule:
      allOf:
      - $ref: '#/components/schemas/JsonApiAction'
      - type: object

    Pause:
      allOf:
      - $ref: '#/components/schemas/JsonApiAction'
      - type: object

    Park:
      allOf:
      - $ref: '#/components/schemas/JsonApiAction'
      - type: object
        properties:
          attributes:
            $ref: '#/components/schemas/DurationAttributes'
        required:
          - attributes

    ParkUntilNextSchedule:
      allOf:
      - $ref: '#/components/schemas/JsonApiAction'
      - type: object

    ParkUntilFurtherNotice:
      allOf:
      - $ref: '#/components/schemas/JsonApiAction'
      - type: object
      
    DurationAttributes:
      type: object
      properties:
        duration:
          type: integer
          format: int64
      required:
        - duration

  requestBodies:
    Action:
      description: A single action
      required: true
      content:
        application/vnd.api+json:
          schema:
            type: object
            properties:
              data:
                oneOf:
                  - $ref: '#/components/schemas/Start'
                  - $ref: '#/components/schemas/ResumeSchedule'
                  - $ref: '#/components/schemas/Pause'
                  - $ref: '#/components/schemas/Park'
                  - $ref: '#/components/schemas/ParkUntilNextSchedule'
                  - $ref: '#/components/schemas/ParkUntilFurtherNotice'
                discriminator:
                  propertyName: type
            required:
              - data
          example: |
            {
            	"data": {
            		"type": "Start",
            		"attributes": {
            			"duration": 10
            		}
            	}
            }

  responses:
    SingleMower:
      description: 'Success, response body contains data. Empty if valid mower id but mower id could not be found'
      content: 
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/JsonApiDataDocument'
    
    MultipleMowers:
      description: 'Success, response body contains data.'
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/JsonApiDataListDocument'

    ActionAccepted:
      description: 'The action was accepted and is being processed'

    BadRequest:
      description: 'Failure, bad request.'
      content: 
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/JsonApiErrorDocument'

    Forbidden:
      description: 'Failure, unauthorized request.'
      content: 
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/JsonApiErrorDocument'

    NotFound:
      description: 'Failure, requested resource not found.'
      content: 
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/JsonApiErrorDocument'

    InternalServerError:
      description: 'Error, unknown internal server error.'
      content: 
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/JsonApiErrorDocument'

    ServiceUnavailable:
      description: 'Error, unavailable internal server.'
      content: 
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/JsonApiErrorDocument'

  securitySchemes:
    APIKeyHeader:
      type: apiKey
      in: header
      name: X-Api-Key
      description: REQUIRED. The key obtained from the Husqvarna Group, specific to your application.
    Token:
      type: apiKey
      in: header
      name: Authorization
      description: REQUIRED. Header value should be set to [Bearer <token>].
    Provider:
      type: apiKey
      in: header
      name: Authorization-Provider
      description: REQUIRED. Bearer type auth. The only supported value is currently "husqvarna".